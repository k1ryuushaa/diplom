#pragma checksum "D:\Users\bykov\source\repos\ArtRoyalDetailing\ArtRoyalDetailing\Views\Sheduler\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "79e372e3c4f41b3c3a5190de7685a3a4859d3d1b"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Sheduler_Index), @"mvc.1.0.view", @"/Views/Sheduler/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Users\bykov\source\repos\ArtRoyalDetailing\ArtRoyalDetailing\Views\_ViewImports.cshtml"
using ArtRoyalDetailing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Users\bykov\source\repos\ArtRoyalDetailing\ArtRoyalDetailing\Views\_ViewImports.cshtml"
using ArtRoyalDetailing.Domain.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"79e372e3c4f41b3c3a5190de7685a3a4859d3d1b", @"/Views/Sheduler/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"97f27d8e858e53a6fde28bcc2e81f4974a845338", @"/Views/_ViewImports.cshtml")]
    public class Views_Sheduler_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/calendar.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\Users\bykov\source\repos\ArtRoyalDetailing\ArtRoyalDetailing\Views\Sheduler\Index.cshtml"
  
    ViewData["Title"] = "Расписание сотрудников";
    List<WorkersSheduler> sheduler = ViewBag.Sheduler;

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<hr />
<div class=""row"">
    <div class=""col"">
        <div class=""calendar"">
            <div class=""monthchangecal"">
            </div>
            <div class=""monthyear"">
                <div class=""month""><ion-icon name=""calendar-clear-outline"" style=""height: 19px;""></ion-icon><span id=""monthchange""></span></div>
                <div class=""year"">
                    <span id=""prev-year""><ion-icon name=""chevron-back-outline"" style=""height: 18px;""></ion-icon></span>
                    <span id=""yearchange""></span>
                    <span id=""next-year""><ion-icon name=""chevron-forward-outline"" style=""height: 18px;""></ion-icon></span>
                </div>
            </div>
            <div class=""week-days"">
                <span>Пн</span>
                <span>Вт</span>
                <span>Ср</span>
                <span>Чт</span>
                <span>Пт</span>
                <span>Сб</span>
                <span>Вс</span>
            </div>
            <div class=""monthda");
            WriteLiteral(@"ys"">
            </div>
        </div>
    </div>
    <div class=""col"">
        <div class=""sheduler"">
             <div class=""sheduler-hide"">
                 <span>Выберите дату</span>
            </div>
             <div id=""shedulerContent"" style=""display:none"">
                 <div class=""sheduler-header""><span><ion-icon name=""people-outline"" style=""height: 19px;""></ion-icon></span></div>
                 <div class=""sheduler-header-worker""><span>Администраторы</span></div>
                 <div class=""sheduler-admin-list"">
                 </div>
                 <div class=""sheduler-header-worker""><span>Мойщики</span></div>
                 <div class=""sheduler-worker-list"">
                 </div>
                 <div class=""registerme border-top border-1"">
                 <div class=""col"">
                     <div class=""d-flex align-items-center"">
                         <div class=""regtime col"">
                             <div class=""time"">
                            ");
            WriteLiteral(@"     <span>ОТ:</span>
                                 <input type=""number"" min=""10"" max=""21"" class=""timeChange"" onchange=""inputValid()"" id=""hrsOT"" value=""10""></input>
                                 <div class=""dots"">:</div>
                                 <input type=""number"" min=""00"" max=""59"" class=""timeChange"" onchange=""inputValid()"" id=""minsOT"" value=""00""></input>
                             </div>
                         </div>
                         <div class=""regtime col"">
                             <div class=""time"">
                                 <span>ДО:</span>
                                 <input type=""number"" min=""10"" max=""21"" class=""timeChange"" onchange=""inputValid()"" id=""hrsDO"" value=""21""></input>
                                 <div class=""dots"">:</div>
                                 <input type=""number"" min=""00"" max=""59"" class=""timeChange"" onchange=""inputValid()"" id=""minsDO"" value=""00""></input>
                             </div>
                         </div>");
            WriteLiteral("\n                     </div>\r\n                     <button class=\"row\" onclick=\"addToSheduler()\">Записаться на дату</button>\r\n                     </div>\r\n                 </div>\r\n             </div>\r\n        </div>\r\n    </div>\r\n    </div>\r\n    ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "79e372e3c4f41b3c3a5190de7685a3a4859d3d1b7396", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    <script>
        let cd=0
        let cm=0
        let cy=0
        getSelectedDate = (current_day, current_month, current_year) => {
            cd = current_day
            cm = current_month
            cy = current_year
            var model = { day: current_day, month:current_month, year:current_year };
            $.ajax({
                url: '/Sheduler/Get',
                type: ""GET"",
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                data: { day: current_day, month: current_month, year: current_year },
                async: true,
                processData: true,
                cache: false,
                success: function (data) {
                    document.querySelector('#shedulerContent').style.display = 'block'
                    document.querySelector('.sheduler-hide').style.display = 'none'
                    let sheduler = document.querySelector('.sheduler')
                    sheduler.querySelector('.sheduler");
            WriteLiteral(@"-header').innerHTML = `<span><ion-icon name=""people-outline"" style=""height: 19px;""></ion-icon>Расписание на ${current_day}.${current_month}.${current_year}</span>`
                    let adminNoExist = document.createElement('div')
                    adminNoExist.classList.add('worker')
                    let spanNoA = document.createElement('span')
                    spanNoA.innerHTML = ""Администраторов на смене пока нет :(""
                    adminNoExist.appendChild(spanNoA)

                    let workerNoExist = document.createElement('div')
                    workerNoExist.classList.add('worker')
                    let spanNoW = document.createElement('span')
                    spanNoW.innerHTML = ""Мойщиков на смене пока нет :(""
                    workerNoExist.appendChild(spanNoW)
                    sheduler.querySelector('.sheduler-admin-list').innerHTML = """"
                    sheduler.querySelector('.sheduler-worker-list').innerHTML = """"
                    sheduler.querySe");
            WriteLiteral(@"lector('.sheduler-admin-list').appendChild(adminNoExist)
                    sheduler.querySelector('.sheduler-worker-list').appendChild(workerNoExist)
                    if(data!=null)
                    {

                        data.forEach((e) => {
                            if (e.idWorkerNavigation.userRole==2)
                            {
                                try{sheduler.querySelector('.sheduler-admin-list').removeChild(adminNoExist)} catch(e){}
                                let admin = document.createElement('div')
                                admin.classList.add('worker')
                                let span = document.createElement('span')
                                span.innerHTML = `${e.idWorkerNavigation.userSurname} ${e.idWorkerNavigation.userName} c <i>${e.timeStart.value.hours}:${e.timeStart.value.minutes.toString().length == 1 ? ""0"" + e.timeStart.value.minutes.toString() : e.timeStart.value.minutes.toString()}</i> до <i>${e.timeStop.value.hours}:${e.ti");
            WriteLiteral(@"meStop.value.minutes.toString().length == 1 ? ""0"" + e.timeStop.value.minutes.toString() : e.timeStop.value.minutes.toString()}</i >`
                                admin.appendChild(span)
                                sheduler.querySelector('.sheduler-admin-list').appendChild(admin)
                            }
                            else if (e.idWorkerNavigation.userRole == 3) 
                            {
                                try { sheduler.querySelector('.sheduler-worker-list').removeChild(workerNoExist) } catch (e) { }
                                let worker = document.createElement('div')
                                worker.classList.add('worker')
                                let span = document.createElement('span')
                                span.innerHTML = `${e.idWorkerNavigation.userSurname} ${e.idWorkerNavigation.userName} c <i>${e.timeStart.value.hours}:${e.timeStart.value.minutes.toString().length == 1 ? ""0"" + e.timeStart.value.minutes.toString() : e.t");
            WriteLiteral(@"imeStart.value.minutes.toString()}</i> до <i>${e.timeStop.value.hours}:${e.timeStop.value.minutes.toString().length == 1 ? ""0"" + e.timeStop.value.minutes.toString() : e.timeStop.value.minutes.toString()}</i>`
                                worker.appendChild(span)
                                sheduler.querySelector('.sheduler-worker-list').appendChild(worker)
                            }
                        
                        })
                    }
                    createAlert('1','2','success')
                },
                error: function (xhr) {
                    alert('error');
                }
            });
        }

        inputValid = () => {
            let sheduler = document.querySelector('#shedulerContent')
            let hrsOT = sheduler.querySelector('#hrsOT')
            let minsOT = sheduler.querySelector('#minsOT')
            let hrsDO = sheduler.querySelector('#hrsDO')
            let minsDO = sheduler.querySelector('#minsDO')
           ");
            WriteLiteral(@" alert(minsOT.value)
            if (hrsOT.value!=null&&hrsOT.value >= 10 && hrsOT.value <= 21) {
            }
            else {
                hrsOT.value = 10;
            }
            if (hrsDO.value!=null&&hrsDO.value >= 10 && hrsDO.value <= 21) {
            }
            else {
                hrsDO.value = 10;
            }
            if (minsOT.value!=null&&minsOT.value >= 0 && minsOT.value <= 59) {
            }
            else {
                minsOT.value = 59;
            }
            if (minsOT.value!=null&&minsDO.value >= 0 && minsDO.value <= 59) {
            }
            else {
                minsDO.value = 59;
            }
        }
        addToSheduler = ()=>
        {
            alert(`${cd} ${cm} ${cy}`)
            
        }
    </script>


");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
