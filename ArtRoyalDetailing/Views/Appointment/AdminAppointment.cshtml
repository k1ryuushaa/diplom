@model List<Contracts>
@using System.Security.Claims
@{
    ViewData["Title"] = "Записи клиентов";
    List<string> carClasses = ViewBag.carClasses;
    List<Users> workers = ViewBag.workers;
    List<ContractStatuses> statuses = ViewBag.contractStatuses;
    List<Services> services = ViewBag.services;
    List<ServicesCosts> servicesCosts = ViewBag.servicesCosts;
    List<ContractsServices> contractServices = ViewBag.contractServices;
}
<section id="scrollsection">
    <div class="scroll text-scroll">
        <div>
            •Записи клиентов•Записи клиентов•Записи клиентов•Записи клиентов•Записи клиентов•Записи клиентов
        </div>
        <div>
            •Записи клиентов•Записи клиентов•Записи клиентов•Записи клиентов•Записи клиентов•Записи клиентов
        </div>
    </div>
</section>
</br>
</br>
</br>
@*<div class="searchAppointment" style="margin:40px 5px 5px 5px;">
        <h4 class="m-2 text-center text-light">
            Поиск</h4>
            <div class="row m-1">
                <div class="col mt-1 mb-1"><input type="text" class="text-control" placeholder="Номер записи" /></div>
                <div class="col mt-1 mb-1"><input type="text" class="text-control" placeholder="Телефон клиента" /></div>
                <div class="col mt-1 mb-1"><input type="text" class="text-control" /></div>
                <div class="col mt-1 mb-1"><input type="text" class="text-control" /></div>
            </div>
    </div>*@
</br>
<div class="appointments">
    @foreach (var appointment in Model)
    {
        <div class="m-2 currentAppointment">
            <div class="col appointmentDiv" style="height: auto;background-color:@(appointment.StatusContract.Value == 1 ? "#76009a27 " : "") @(appointment.StatusContract.Value == 2 ? "#5b000e27 " : "") @(appointment.StatusContract.Value == 3 ? "#fbff001d " : "") @(appointment.StatusContract.Value == 4 ? "#05c1fa18" : "");">
                <h4 class="text-center m-0 font-italic" style="letter-spacing: 7px;">Запись #@appointment.IdContract</h4>
                <div class="row p-2">
                    <table class="col table table-borderless text-light" style="background: #4802465b; border-radius: 20px; margin: 3px; max-height: 220px;">
                        <tbody>
                            <tr>
                                <td class="col-1" style="font-weight: bold; font-size: 13px; vertical-align: middle;">Номер телефона клиента</td>
                                <td class="col-2" style="min-width: 150px; vertical-align: middle;"><div class="text-control">@appointment.ClientNumber</div></td>
                            </tr>
                            <tr>
                                <td style="font-weight: bold;font-size: 13px; vertical-align: middle;">Класс автомобиля</td>
                                <td style="vertical-align: middle;">
                                    <select class="select-control" id="carClass">
                                        <option value="" disabled>Класс</option>
                                        @foreach (var carClass in carClasses)
                                        {
                                            if (appointment.AutoClass.Contains(carClass))
                                            {
                                                <option selected>@carClass</option>
                                            }
                                            else
                                            {
                                                <option>@carClass</option>
                                            }
                                        }
                                    </select>
                                </td>
                            </tr>
                            <tr>
                                <td style="font-weight: bold; font-size: 13px; vertical-align: middle;">Статус записи</td>
                                <td style="vertical-align: middle;">
                                    <select class="select-control" id="appointmentStatus">
                                        <option value="" disabled selected>Статус</option>
                                        @foreach (var status in statuses)
                                        {
                                            if (appointment.StatusContract.HasValue && appointment.StatusContract.Value == status.IdStatus)
                                            {
                                                <option selected value="@status.IdStatus">@status.StatusName</option>
                                            }
                                            else
                                            {
                                                <option value="@status.IdStatus">@status.StatusName</option>
                                            }
                                        }
                                    </select>
                                </td>
                            </tr>
                        </tbody>
                    </table>
                    <table class="col table table-borderless" style="background: #4802465b; border-radius: 20px;margin: 4px; height:max-content" id="tableServices">
                        <thead>
                            <tr class="text-center table-header">
                                <td scope="col"><span style="font-weight: bold;font-size: 18px;">Услуга</span></td>
                                <td scope="col"><span style="font-weight: bold;font-size: 18px;">Мойщик</span></td>
                                <td scope="col"><span style="font-weight: bold;font-size: 18px;">Стоимость</span></td>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td colspan="3">
                                    <button class="text-control p-0" style="display: flex; align-items: center; justify-content: center;" onclick="addTableRow(this)">
                                        <ion-icon name="add-circle-outline"></ion-icon>
                                        Добавить
                                    </button>
                                </td>
                            </tr>
                            @foreach (var contractService in contractServices.Where(x => x.IdContract == appointment.IdContract))
                            {
                                <tr style="height:55px;" id="tableRow">
                                    <td>
                                        <select class="select-control" id="serviceSelect">
                                            <option disabled selected value="">Услуга</option>
                                            @foreach (var service in services)
                                            {
                                                if (contractService.IdService == service.IdService)
                                                {
                                                    <option selected value="@service.IdService">@service.ServiceName</option>
                                                }
                                                else
                                                {
                                                    <option value="@service.IdService">@service.ServiceName</option>
                                                }
                                            }
                                        </select>
                                    </td>
                                    <td>
                                        <select class="select-control" id="workerSelect">
                                            <option disabled selected value="">Мойщик</option>
                                            @foreach (var worker in workers.Where(x=>x.UserRole==2))
                                            {
                                                if (contractService.IdWasher == worker.UserId)
                                                {
                                                    <option selected value="@worker.UserId">@(worker.UserName+" "+worker.UserSurname)</option>
                                                }
                                                else
                                                {
                                                    <option value="@worker.UserId">@(worker.UserName+" "+worker.UserSurname)</option>
                                                }
                                            }
                                        </select>
                                    </td>
                                    <td>
                                        @foreach (var serviceCost in servicesCosts)
                                        {
                                            if (contractService.IdService == serviceCost.IdService && appointment.AutoClass.Contains(serviceCost.ClassAuto))
                                            {
                                                <input type="text" placeholder="Стоимость" id="costSelect" class="text-control" value="@serviceCost.Cost" />
                                            }
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                    <table class="col table table-borderless text-light" style="background: #4802465b; border-radius: 20px; margin: 3px; max-height: 220px;">
                        <tbody>
                            <tr>
                                <td class="col-1" style="font-weight: bold; font-size: 13px; vertical-align: middle;">Дата записи</td>
                                <td class="col-2" style="min-width: 150px;vertical-align: middle;"><input type="text" id="dateAppointment" class="text-control" value="@appointment.DateContract.Value.ToShortDateString()" /></td>
                            </tr>
                            <tr>
                                <td style="font-weight: bold;font-size: 13px; vertical-align: middle;">Время записи</td>
                                <td style="vertical-align: middle;"><input type="text" id="timeAppointment" class="text-control" value="@appointment.TimeContract.Value.ToString(@"hh\:mm")" /></td>
                            </tr>
                            <tr>
                                <td colspan="2" style="padding: 0;">
                                    <button class="appointmentBtn" style="display: flex; align-items: center; justify-content: center;" onclick="editAppointment(this,@appointment.IdContract)">
                                        Изменить запись
                                    </button>
                                </td>
                            </tr>
                            <tr>
                                <td colspan="2" style="padding: 0;">
                                    <button class="appointmentBtn" onclick="deleteAppointment(this)" style="display: flex; align-items: center; justify-content: center;">
                                        Отменить запись
                                    </button>
                                </td>
                            </tr>
                            @if (appointment.StatusContract == 4)
                            {
                            <tr>
                                <td colspan="2" style="padding: 0;">
                                    <button class="appointmentBtn" style="display: flex; align-items: center; justify-content: center;" onclick="receiptAppointment(@appointment.IdContract)">
                                        Квитанция
                                    </button>
                                </td>
                            </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts{

    <script>
    findAncestor = (el, cls) => {
        while ((el = el.parentElement) && !el.classList.contains(cls));
        return el;
    }
    addTableRow = (el) => {
        let table = findAncestor(el, 'table');
        let tableBody = table.getElementsByTagName('tbody')[0]
        let row = table.querySelector('#tableRow')
        let rowToAdd = row.cloneNode(true)
        table.appendChild(rowToAdd)
    }
    editAppointment = (el,appointmentId) => {
        let appointment = findAncestor(el, 'currentAppointment')
        let contractId = appointmentId
        let autoClass = appointment.querySelector("#carClass").value
        let contractStatus = appointment.querySelector("#appointmentStatus").value
        let dateContract = appointment.querySelector("#dateAppointment").value
        let timeContract = appointment.querySelector("#timeAppointment").value
        let services = appointment.querySelectorAll('#tableRow')
        let admin = `@User.FindFirst(ClaimTypes.NameIdentifier).Value`
        var serviceList = []
        var workerList = []
        var costsList = []
        for (var i = 0; i < services.length; i++) {
            element = services[i];
            serviceList.push(element.querySelector('#serviceSelect').value)
            workerList.push(element.querySelector('#workerSelect').value)
            costsList.push(element.querySelector('#costSelect').value)
        }
        var model = {
            AppointmentId:contractId,
            CarClass: autoClass,
            IdAdmin: admin,
            AppointmentStatus:contractStatus,
            DateAppointment:dateContract,
            TimeAppointment:timeContract,
            ServicesList:serviceList,
            WorkersList:workerList,
            CostList:costsList
        }
        $.ajax({
            url: '/Appointment/AdminAppointment',
            type: "POST",
            contentType: 'application/x-www-form-urlencoded; charset=utf-8',
            data: model,
            async: true,
            processData: true,
            cache: false,
            success: function (data) {
                if (data.statusCode == 0)
                    createAlert('Ошибка', 'Не найдена запись', 'error')
                if (data.statusCode == 4)
                    createAlert('Ошибка', "Неверная дата или время записи", 'error')
                if (data.statusCode == 200)
                    createAlert('Успешно', `Запись #${contractId} изменена!`, 'success')
                if (data.statusCode == 400)
                    createAlert('Ошибка', `Ошибка сервера`, 'success')
            },
            error: function (xhr) {
                createAlert('Ошибка', "Неверная дата или время записи", 'error')
            }
        });
        }
        deleteAppointment = (el) => {
           
        }
        receiptAppointment = (contractId) => {
            $.ajax({
                url: '@Url.Action("CreateReceipt", "Appointment")',
                type: 'POST',
                data: { appointmentId: contractId },
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                processData: true,
                cache: false,
                async: true,
                success: function (data) {
                    if (data == true)
                        createAlert('Успешно', `Квитанция по записи ${contractId} сформирована`, 'success')
                    if (data == false)
                        createAlert('Ошибка', `Квитанцию по записи ${contractId} не удалось сформировать`, 'error')
                },
                error: function (xhr) {
                    alert(JSON.stringify(xhr))
                    createAlert('Ошибка', "Запрос не отправлен", 'error')
                }
            });
        }
    </script>
}