@model ArtRoyalDetailing.Domain.Models.Users
@{
    var appointments = (List<ArtRoyalDetailing.Domain.Models.Contracts>)ViewBag.Appointments;
    var appoinmentServices = (List<ArtRoyalDetailing.Domain.Models.ContractsServices>)ViewBag.AppointmentsServices;
    var lastSalary = (Salary)ViewBag.LastSalary;
    double salary = 0;
    bool group = false;
}
@if (lastSalary != null)
{
<div class="containerForSalary">
    <div id="nullRes">Последний расчёт был @lastSalary.DateSalary.Value.ToShortDateString() на сумму @lastSalary.Salary1 руб.</div>
</div>
}
<div class="containerForSalary">
    @if(appointments!=null&&appoinmentServices!=null&&appoinmentServices.Count>0&&appointments.Count>0)
    {
    <table class="table table-borderless mb-0">
        <thead>
            <tr>
                <td scope="col">
                    Запись 
                </td>
                <td scope="col">
                    Дата
                </td>
                <td scope="col">
                    Класс авто
                </td>
                <td scope="col">
                    Услуга
                </td>
                <td scope="col">
                    Стоимость услуги (руб.)
                </td>
                <td scope="col">
                    З/П (руб.)
                </td>
            </tr>
        </thead>
        <tbody>
            @foreach (var appointment in appointments)
            {
                {group = true;}
                @foreach (var service in appoinmentServices)
                {
                    if (appointment.IdContract == service.IdContract)
                    {
                        <tr>
                            @if (group)
                            {
                            <td>
                                @appointment.IdContract
                            </td>
                            <td>
                                @appointment.DateContract.Value.ToString("D")
                            </td>
                            <td>
                                @appointment.AutoClass
                            </td>
                            { group = false; }
                            }
                            else
                            {
                            <td>
                            </td>
                            <td>
                            </td>
                            <td>
                            </td>
                            }
                            <td>
                                @service.IdServiceNavigation.ServiceName
                            </td>
                            <td>
                                @service.Cost
                            </td>
                            <td style="font-weight:bold">
                                @(Math.Round((double)service.Cost.Value * 0.3,2))
                                @{salary += ((double)service.Cost.Value * 0.3);}
                            </td>
                        </tr>
                    }
                }
            }
            <tr>
                <td>
                </td>
                <td>
                </td>
                <td>
                </td>
                <td>
                </td>
                <td style="font-weight: bold;font-size: 20px;text-align: end;">
                    ИТОГО:
                </td>
                <td style="font-size: 20px;">
                    @(Math.Round(salary,2))руб.
                </td>
            </tr>
        </tbody>
    </table>
    <button onclick="setSalary()">Рассчитать</button>
    }
    else{
            <div id="nullRes">Пока ничего не заработал</div>
    }
</div>
<script>
    setSalary = () => {
        let worker =@Model.UserId
        $.ajax({
                url: '@Url.Action("SetSalary", "LK")',
                type: 'POST',
                data: { workerId: worker },
                contentType: 'application/x-www-form-urlencoded; charset=utf-8',
                processData: true,
                cache: false,
                async: true,
                success: function (data) {
                    if (data.data == true) {
                        printHTML(data.description)
                        createAlert('Успешно', "Зарплата выдана", 'success')
                    }
                    else {
                        createAlert('Ошибка', data.description, 'error')
                    }
                    document.querySelectorAll('.containerForSalary')[1].innerHTML='<div id="nullRes">Пока ничего не заработал</div>'
                },
                error: function (xhr) {
                    alert(JSON.stringify(xhr))
                    createAlert('Ошибка', "Запрос не отправлен", 'error')
                }
            });
    }
</script>
