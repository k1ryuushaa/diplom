@model IEnumerable<ArtRoyalDetailing.Domain.Models.Services>
@using ArtRoyalDetailing.Domain.Enum
@{
    ViewData["Title"] = "Услуги";
}
<section id="scrollsection">
    <div class="scroll text-scroll">
        <div>
            УСЛУГИ
        </div>
    </div>
</section>
<br />
<br />
<br />
<h1 class="text-center text-change-color">Стоимость услуг</h1>
<style>
    td:hover {
        background-color: rgb(229, 111, 0);
        border-radius: 5px;
    }
</style>

@foreach (var type in ViewBag.ServiceTypes)
{
    <h2 class="text-change-color text-center m-2">@type.TypeName | Прайс-лист</h2>
    <div style="overflow: auto; border-radius: 10px; padding: 10px; box-shadow: #3A3C41 0px 0px 10px 10px; opacity: 70%;" class="bg-dark">
        <table class="table table-dark table-sm border-success">

            <thead>
                <tr>
                    <th class="text-center">
                        Наименование услуги/Категория
                    </th>
                    <th class="text-center">
                        Класс A
                    </th>
                    <th class="text-center">
                        Класс B, C, D
                    </th>
                    <th class="text-center">
                        Кроссовер/ Универсал/ Класс E, F
                    </th>
                    <th class="text-center">
                        Внедорожник
                    </th>
                    <th class="text-center">
                        Минивэн
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    if (item.ServiceType == type.IdType)
                    {
                        <tr class="tbRow">
                            @if (User.IsInRole($"{(int)Role.Admin}"))
                            {
                                <td class="text-center">
                                    <input type="text" class="inpService" value="@item.ServiceName" oninput="changeNameForService(@item.IdService, this.value)" />
                                </td>
                            }
                            else
                            {
                                <td>
                                    @Html.DisplayFor(modelItem => item.ServiceName)
                                </td>
                            }
                            @foreach (var cost in (List<ServicesCosts>)ViewBag.ServiceCosts)
                            {
                                if (cost.IdService == item.IdService)
                                {
                                    if (User.IsInRole($"{(int)Role.Admin}"))
                                    {
                                        <td class="text-center">
                                            <input type="text" class="inpService" value="@cost.Cost" onkeyup="changePriceForService(@cost.IdService, '@cost.ClassAuto',this.value)" />
                                        </td>
                                    }
                                    else
                                    {
                                        <td class="text-center">
                                            @cost.Cost
                                        </td>
                                    }
                                }
                            }
                            @if (User.IsInRole($"{(int)Role.Admin}"))
                            {
                                <td class="text-center">
                                    <div style="cursor: pointer;" onclick="deleteRow(this,@item.IdService)">
                                        <ion-icon name="trash-outline"></ion-icon>
                                    </div>
                                </td>
                            }
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>

}
<script>
    findAncestor = (el, cls) => {
        while ((el = el.parentElement) && !el.classList.contains(cls));
        return el;
    };
    deleteRow = (element,serviceId) => {
        $.post("@Url.Action("RemoveService","Services")",
            {
                serviceId: serviceId
            },
            function (data) {
                if (data.data == true) {
                    createAlert("Успешно", "Услуга удалена", "success")
                    let row = findAncestor(element, 'tbRow')
                    row.parentNode.removeChild(row);
                }
                if (data.data==false)
                    createAlert("Ошибка", "Услуга не удалена", "error")
            });
    }
    changePriceForService = (id, carclass, value) => {
        if (value.length == 0) {
            createAlert("Ошибка", "Пустое поле", "error")
            return;
        }
        $.post("@Url.Action("ChangeCost","Services")",
            {
                serviceId: id,
                classAuto: carclass,
                cost:value
            },
            function (data) {
                if (data.data==true)
                    createAlert("Успешно", data.description, "success")
                if (data.data==false)
                    createAlert("Ошибка", data.description, "error")
            });
    }
    changeNameForService = (id, value) => {
        if (value.length == 0) {
            createAlert("Ошибка", "Пустое поле", "error")
            return;
        }
        $.post("@Url.Action("RenameService","Services")",
            {
                serviceId: id,
                newName:value
            },
            function (data) {
                if (data.statusCode == 200)
                    createAlert("Успешно", data.description, "success")
                if (data.statusCode == 0)
                    createAlert("Ошибка", data.description, "error")
            });
    }
</script>
